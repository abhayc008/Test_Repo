import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
class Transaction
{
   Date transactionDate;
   double deposit;
   double withdraw;
   double closingBalance;
}
class CheckingAccount
{
	private double balance;
	private int number;
	private double minBalance=1000;
	Scanner scanner=new Scanner(System.in);
	CheckingAccount()
	{
		setBalance(0);
	}
	public int getNumber()
	{
		return number;
	}

	public void setNumber(int number)
	{
		this.number = number;
	}

	public void setBalance(double balance)
	{
		this.balance = balance;
	}	
	public void getBalance()
	{
		System.out.println("Current Account balance is Rs." +balance);
	}

	public Transaction depositInAccount() 
	{   
		Transaction  trans=new Transaction();
		double depositAmount;
		System.out.println("Enter the amount to deposit");
		depositAmount=scanner.nextDouble();
		
		if(depositAmount>0)
		{
		balance+=depositAmount;
		System.out.println("Updated balance is Rs."+balance);
		}
		else
		{
			System.out.println("Amount should be greater than 0");
		}
		trans.transactionDate=new Date();
		trans.closingBalance= balance;
		trans.deposit=depositAmount;
		
		return trans;
		
	}
	public Transaction withDrawFromAccount()
	{
		double withDrawAmount;
		Transaction  trans=new Transaction();
		System.out.println("Enter the amount to withdraw");
		withDrawAmount=scanner.nextDouble();
		
		if((balance- (minBalance +withDrawAmount))>=0)
		{
		balance-=withDrawAmount;
		
		System.out.println("Updated balance is Rs. "+balance);
		}
		else
		{
			System.out.println("Insufficient balance to process withdraw request.");
			System.out.println("Your account balance is Rs."+balance);
		}
		trans.transactionDate=new Date();
		trans.closingBalance= balance;
		trans.withdraw=withDrawAmount;
		
		return trans; 
	 }
	public void miniStatement(List<Transaction> transactions) 
	{
		System.out.println("transactionDate deposit  withdraw  closingBalance");
		for(Transaction i:transactions)
		{
		    System.out.println(i.transactionDate+"  "+i.deposit+"  "+i.withdraw+" "+i.closingBalance);
		}
	}
}
public class ATM 
{
	public static void doTransactions()
	{
		try
		{
			Scanner scanner=new Scanner(System.in);
			List<Transaction> transactions = new ArrayList<Transaction>();
			//System.out.println(trans.transactionDate);
			CheckingAccount ca=new CheckingAccount();
			int choice;
			while(true)
			{
		      System.out.println();
			  System.out.println("Enter your choice");
			  System.out.println("1.Check balance");
			  System.out.println("2.Deposit Amount");
			  System.out.println("3.Withdraw amount");
			  System.out.println("4.Mini Statement");
			  System.out.println("5.Exit");
			  System.out.println();
			  choice=scanner.nextInt();
			  switch(choice)
			  {
			  case 1:
				  ca.getBalance();
				  break;
			  case 2:
				  transactions.add(ca.depositInAccount());
				  break;
			  case 3:
				  transactions.add(ca.withDrawFromAccount());
			      break;
			  case 4:
                   ca.miniStatement(transactions);				  
			  case 5:
				  System.exit(0);
			  default:
				  System.out.println("Please enter valid choice !!!");
			  }			  
		    }
		}
		catch(Exception ex)
		     {
			  ex.printStackTrace();
		     }
	    }
	public static void main(String[] args) 
	{
		
		
		try
		{
	       int pin,password = 1234;
	       Scanner scanner=new Scanner(System.in);
	       while(true)
	       {
		       System.out.println("Enter 4 digit PIN");
		       pin=scanner.nextInt();
		       if(pin == password)
		       {
		    	   doTransactions();
		       }
		       else
		       {
		    	   System.out.println("Incorrect pin!!!");
		    	   continue;
		       }
	       }
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
		}
	}
}
